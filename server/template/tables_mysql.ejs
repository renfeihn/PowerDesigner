<%
function isNotNull(str) {
    if (str != null && str != undefined && str != '') {
        return true;
    } else {
        return false;
    }
}

function StringBuffer() {
    this._strings = new Array();
}
StringBuffer.prototype.append = function (str) {
    this._strings.push(str);
    return this;// 字符串拼接
}
StringBuffer.prototype.toString = function () {
    return this._strings.join("");
}


// 数据类型转换
function dataTypeFactory(dataType,precision) {
    var newType = '';
    if (isNotNull(dataType)) {
        dataType = dataType.toLowerCase();
        switch (dataType) {
            case 'number':
                if(precision>0)
                {
                    newType = 'Decimal';
                }else{
                    newType='bigint';
                }
                break;

            case 'clob':
                newType = 'Text';
                break;
            case 'integer':
                newType = 'Int';
                break;
            default:
                newType = dataType;
        }
    } else {
        newType = 'Varchar';
    }
    return newType;
}

var sql = new StringBuffer();
// 换行
var nextLine = '\n';
// 缩进（一个空格）
var space = ' ';
// 缩进tab（4个空格）
var tab = '    ';
if (isNotNull(table.code)) {
    sql.append('drop table if exists ')
            .append(table.code + ';')
            .append(nextLine)
            .append('/*==============================================================*/')
            .append(nextLine)
            .append('/* Table: ' + table.code + '                                           */')
            .append(nextLine)
            .append('/*==============================================================*/')
            .append(nextLine)
            .append('create table ' + table.code)
            .append(nextLine)
            .append('(')
            .append(nextLine);

    if (isNotNull(table.attr)) {
        var primary_keys = new Array();
        var attrs = table.attr;
        var mysqlData;
        attrs.forEach(function (attr, index, array) {
            if (isNotNull(attr)) {
                // 列名
                sql.append(tab + attr.code);
                // 数据类型
                if (isNotNull(attr.dataType)) {
                    mysqlData= dataTypeFactory(attr.dataType,attr.precision);
                    sql.append(space +mysqlData);
                } else {
                    sql.append(space + 'char');
                }
                if(mysqlData!="bigint"){
                // 长度
                if (isNotNull(attr.lengths)) {
                    if(attr.dataType!='Blob') {
                        sql.append('(' + attr.lengths);
                    }
                } else {
                    sql.append('(10');
                }
                if (isNotNull(attr.precision)) {
                    if(attr.dataType!='Blob') {
                        // 精度
                        sql.append(',' + attr.precision);
                    }
                }
                if(attr.dataType!='Blob') {
                    sql.append(')');
                }
                }
                // 是否不为空
                if (isNotNull(attr.M) && attr.M) {
                    sql.append(space + 'not null');
                }

                // 默认值
                if (isNotNull(attr.defaults)) {
                    sql.append(space + "default " + attr.defaults);
                }
                // 描述
                if(table.commentIs!='false'){
                if (isNotNull(attr.comment)) {
                    sql.append(space + "comment \'" + attr.comment + "\'");
                }
                }
                // 标记主键
                if (isNotNull(attr.P) && attr.P) {
                    primary_keys.push(attr.code);
                }

                if ((index + 1) != array.length) {
                    sql.append(',' + nextLine);
                } else {
                    if (primary_keys.length > 0) {
                        sql.append(',' + nextLine)
                                .append(tab)
                                .append('primary  key (');

                        primary_keys.forEach(function (pk, int, pks) {
                            if (int == 0) {
                                sql.append(pk);
                            } else {
                                sql.append(',' + pk);
                            }
                        });
                        sql.append(')');
                    }
                }
            }
        });
    }

    // create end )
    sql.append(nextLine)
            .append(')');
    sql.append('ENGINE=InnoDB DEFAULT CHARSET=utf8 ');
    // 表说明
    if(table.commentTableIs!='false'){
        if (isNotNull(table.comment)) {
            sql.append('COMMENT=\'' + table.comment + '\'');
        }
    }
    sql.append(';');
    // 索引 start
    if (isNotNull(table.indexs)) {
        var indexs = table.indexs;
        indexs.forEach(function (ind, index, array) {
            sql.append(nextLine)
                    .append(nextLine);
            // 列名，数据类型
            if (ind) {
                sql.append('drop index ' + ind.code + ' on ' + table.code + ';')
                        .append(nextLine)
                        .append('/*==============================================================*/')
                        .append(nextLine)
                        .append('/* Index: ' + ind.code + '                                           */')
                        .append(nextLine)
                        .append('/*==============================================================*/')
                        .append(nextLine);

                sql.append('create ');
                if (isNotNull(ind.U) && (ind.U)) {
                    sql.append('unique ');
                }
                sql.append('index ' + ind.code + ' on ' + table.code + ' (');
                sql.append(nextLine)
                        .append(tab);
                // 索引的列项
                var icolumns = ind.columns;
                if(icolumns.length > 0){
                    icolumns.forEach(function (c, int, ics) {
                        if (int == 0) {
                            sql.append(c);
                        } else {
                            sql.append(',' + c);
                        }
                    });
                }
                sql.append(nextLine)
                        .append(');');
            }
        });
    }

    // 索引 end
}
%>
<%- sql %>