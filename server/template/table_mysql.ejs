<%
function isNotNull(str) {
    if (str != null && str != undefined && str != '') {
        return true;
    } else {
        return false;
    }
}

function StringBuffer() {
    this._strings = new Array();
}
StringBuffer.prototype.append = function (str) {
    this._strings.push(str);
    return this;// 字符串拼接
}
StringBuffer.prototype.toString = function () {
    return this._strings.join("");
}


// 数据类型转换
function dataTypeFactory(dataType) {
    var newType = '';
    if (isNotNull(dataType)) {
        dataType = dataType.toLowerCase();
        switch(dataType)
        {
            case 'number':
                newType = 'Decimal';
                break;

            case 'clob':
                newType = 'Text';
                break;
            case 'integer':
                newType = 'Int';
                break;
            default:
                newType = dataType;
        }
    } else {
        newType = 'Varchar';
    }
    return newType;
}

var sql = new StringBuffer();
// 换行
var nextLine = '\n';
// 缩进（一个空格）
var space = ' ';
// 缩进tab（4个空格）
var tab = '    ';
if (isNotNull(table.code)) {
    sql.append('drop table if exists ')
            .append(table.code + ';')
            .append(nextLine)
            .append('/*==============================================================*/')
            .append(nextLine)
            .append('/* Table: ' + table.code + '                                           */')
            .append(nextLine)
            .append('/*==============================================================*/')
            .append(nextLine)
            .append('create table ' + table.code)
            .append(nextLine)
            .append('(')
            .append(nextLine);

    if (isNotNull(table.attr)) {
        var primary_keys = new Array();
        var attrs = table.attr;
        attrs.forEach(function (attr, index, array) {
            if (isNotNull(attr)) {
                // 列名
                sql.append(tab + attr.code);
                // 数据类型
                if (isNotNull(attr.dataType)) {
                    sql.append(space + dataTypeFactory(attr.dataType));
                } else {
                    sql.append(space + 'char');
                }

                // 长度
                if (isNotNull(attr.lengths)) {
                    sql.append('(' + attr.lengths);
                } else {
                    sql.append('(10');
                }
                if (isNotNull(attr.precision)) {
                    // 精度
                    sql.append(',' + attr.precision);
                }
                sql.append(')');

                // 是否不为空
                if (isNotNull(attr.M) && attr.M == 'Y') {
                    sql.append(space + 'not null');
                }

                // 默认值
                if (isNotNull(attr.defaults)) {
                    sql.append(space + "default " + attr.defaults);
                }

                // 描述
                if (isNotNull(attr.comment)) {
                    sql.append(space + "comment \'" + attr.comment + "\'");
                }

                // 标记主键
                if (isNotNull(attr.P) && attr.P == 'Y') {
                    primary_keys.push(attr.code);
                }

                if ((index + 1) != array.length) {
                    sql.append(',' + nextLine);
                } else {
                    if (primary_keys.length > 0) {
                        sql.append(',' + nextLine)
                                .append(tab)
                                .append('primary  key (');

                        primary_keys.forEach(function (pk, int, pks) {
                            if(int == 0){
                                sql.append(pk);
                            }else{
                                sql.append(',' +pk);
                            }
                        });
                        sql.append(')');
                    }
                }
            }
        });
    }

    // create end )
    sql.append(nextLine)
            .append(');');

    // 表说明
    if (isNotNull(table.comment)) {
        sql.append(nextLine)
                .append('alter table ' + table.code + ' comment \'' + table.comment + '\';');
    }
}
%>
<%- sql %>